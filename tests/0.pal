{
    0.pal
    Tests syntax of arithmetic expressions ...
    Errors:
    32:34 unexpected addition operator
}
program (input, output);
// Reads integer input and naively counts the number of even and odd numbers
// between that integer and zero.

type tf = (true, false);

var numOdd : integer;
    number : integer;

function countEven() : integer;
    var counter : integer;
        numEven : integer;
    function isEven(number : integer) : tf;
    begin
        if (number mod 2) = 0 then
            isEven := true
        else
            isEven := false
    end;
begin
    counter := abs(number) + 1;
    while counter >= 0 do
    begin
        counter := counter - (+1);  // Legal.    
        if isEven(counter) then
            numEven := numEven + +1 { $ERR_DATA$ [34, "unexpected addition operator", ["unexpected PLUS"]] $ERR_DATA$ }
        
    end
end;

procedure countOdd(counter : integer)
// FINISH
begin
end;

begin
// FINISH
sent1 := sentence();
worked := setWord(1, 'bob');
writeln(worked);
writeln(FORCECONST);

end.
